/*
 * Endpoints
 * Oyster uses OAuth2 to enable customers to grant access to their data to third party applications. Customers also need to use this API to authenticate themselves when making API requests.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.TimeOffGetAllRequestsResponse;
import com.konfigthis.client.model.TimeOffGetEntitlementsResponse;
import com.konfigthis.client.model.TimeOffGetRequestResponse;
import com.konfigthis.client.model.TimeOffRejectRequestRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TimeOffApi
 */
@Disabled
public class TimeOffApiTest {

    private static TimeOffApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TimeOffApi(apiClient);
    }

    /**
     * Approve request
     *
     * Approves a time off request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void approveRequestTest() throws ApiException {
        String id = null;
        api.approveRequest(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve all requests
     *
     * Returns all Time Off Requests for a company.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllRequestsTest() throws ApiException {
        Integer perPage = null;
        Integer page = null;
        TimeOffGetAllRequestsResponse response = api.getAllRequests()
                .perPage(perPage)
                .page(page)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve entitlements
     *
     * Returns entitlements for each engagement of the company.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEntitlementsTest() throws ApiException {
        Integer perPage = null;
        Integer page = null;
        TimeOffGetEntitlementsResponse response = api.getEntitlements()
                .perPage(perPage)
                .page(page)
                .execute();
        // TODO: test validations
    }

    /**
     * Retrieve an individual request
     *
     * Returns details for a request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRequestTest() throws ApiException {
        String id = null;
        TimeOffGetRequestResponse response = api.getRequest(id)
                .execute();
        // TODO: test validations
    }

    /**
     * Reject request
     *
     * Rejects a time off request.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rejectRequestTest() throws ApiException {
        String reason = null;
        String id = null;
        api.rejectRequest(reason, id)
                .execute();
        // TODO: test validations
    }

}
